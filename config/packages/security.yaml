security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        Symfony\Component\Security\Core\User\User: 'auto'
    providers:
        #users_in_memory:
        inscrit_en_dur:
             memory:                 
                users:                    
                    technicien:
                        password: '$argon2id$v=19$m=65536,t=4,p=1$ZHh5RTkwRldtelBWUU1YeQ$6wTeY5EigzH2ViPUY3490Dq0KULJ2899a2qfeM3FqdU'
                        roles: ['ROLE_USER']                    
                    ingenieur:  
                        password: '$argon2id$v=19$m=65536,t=4,p=1$cTMwd1NJY2QvanFHcFdYbA$ELz8pErBKt6AdKCiAcUCX9v/WNg8uCb8bOABHqEsFco'
                        roles: ['ROLE_ADMIN']
    role_hierarchy:        
        ROLE_ADMIN: ROLE_USER
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        #main:
        #    anonymous: lazy
        #    provider: users_in_memory
        accueil:            
            pattern: ^/(menu/)?$            
            security: false        
        salleTp:            
            pattern: ^/           
            anonymous: true
            provider: inscrit_en_dur
            form_login:
                login_path:  login                 
                check_path:  login
            logout:                
                path: /logout                
                target: /
            http_basic: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/salle/$, roles: ROLE_USER }
        - { path: ^/salle/, roles: ROLE_ADMIN }
